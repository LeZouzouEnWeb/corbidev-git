name: 🔒 PR de develop vers homol

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
    branches:
      - homol

permissions:
  contents: read
  issues: write          # nécessaire pour commenter via l’API "issues"
  pull-requests: write   # utile sur certains dépôts/paramètres

jobs:
  gate:
    name: Vérifier la source de la PR
    runs-on: ubuntu-latest

    steps:
      - name: 🔎 Contrôle de la branche source
        id: check
        run: |
          echo "### Contrôle PR" >> "$GITHUB_STEP_SUMMARY"
          echo "- Branche source (head): \`${{ github.head_ref }}\`" >> "$GITHUB_STEP_SUMMARY"
          echo "- Branche cible (base):  \`${{ github.base_ref }}\`" >> "$GITHUB_STEP_SUMMARY"

          if [ "${{ github.base_ref }}" = "homol" ] && [ "${{ github.head_ref }}" != "develop" ]; then
            MSG="🚫 PR refusée : seules les PR de \`develop\` vers \`homol\` sont autorisées."
            echo "$MSG"
            echo "$MSG" >> "$GITHUB_STEP_SUMMARY"
            exit 1
          fi

          OK="✅ PR valide : ${{ github.head_ref }} → ${{ github.base_ref }}"
          echo "$OK"
          echo "$OK" >> "$GITHUB_STEP_SUMMARY"

      - name: 💬 Commenter la PR si invalide
        if: ${{ failure() }}
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            🚫 **PR refusée**

            - **Cible** : `${{ github.base_ref }}`
            - **Source** : `${{ github.head_ref }}`

            Seules les PR provenant de **`develop`** peuvent être fusionnées dans **`homol`**.  
            Merci d’ouvrir une PR **develop → homol**.
