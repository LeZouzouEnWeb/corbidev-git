name: üîÑ Set PR litle 

on:
  pull_request:
    branches: [ develop ]
    types: [opened, edited, synchronize, ready_for_review, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  update-title:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Set PR title from branch
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            if (!pr) return;

            const branch = pr.head?.ref || "";
            const origTitle = pr.title || "";

            // 1Ô∏è‚É£ Nettoyage de base
            let base = branch.replace(/[_/]+/g, " ").replace(/\s+/g, " ").trim();

            // 2Ô∏è‚É£ Si d√©j√† au format [#123], on sort
            if (/^\s*\[#\d+\]\s+/i.test(base)) {
              core.info("D√©j√† normalis√©, aucun changement.");
              return;
            }

            // 3Ô∏è‚É£ Recherche du num√©ro de ticket
            const m = branch.match(/ticket[-_\s]?(\d{1,8})\b/i);
            let num = null;
            if (m) num = m[1];

            // 4Ô∏è‚É£ Retirer le token ticket-xxx de la base
            base = base.replace(/\bticket[-_\s]?\d{1,8}\b/i, "").trim();

            // 5Ô∏è‚É£ Re-nettoyer les espaces
            base = base.replace(/\s+/g, " ");

            // 6Ô∏è‚É£ D√©terminer si un pr√©fixe de type "feature" existe
            const prefixMatch = base.match(/^(feature|fix|hotfix|bugfix|release|chore|task|refactor)\b/i);
            let prefix = "";
            let label = base;

            if (prefixMatch) {
              prefix = prefixMatch[1].toLowerCase();
              label = base.replace(new RegExp("^" + prefix + "\\b\\s*"), "").trim();
            }

            // 7Ô∏è‚É£ Construction du titre
            let newTitle;
            if (num) {
              if (prefix) {
                newTitle = `[#${num}] ${prefix} - ${label}`;
              } else {
                newTitle = `[#${num}] - ${label}`;
              }
            } else {
              newTitle = base;
            }

            newTitle = newTitle.trim();

            // 8Ô∏è‚É£ Mise √† jour du titre si diff√©rent
            if (newTitle && newTitle !== origTitle) {
              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                title: newTitle
              });
              core.info(`Titre mis √† jour: "${origTitle}" ‚Üí "${newTitle}"`);
            } else {
              core.info("Aucun changement appliqu√© au titre.");
            }