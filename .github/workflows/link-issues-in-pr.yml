name: üîó Link issues to PR (dynamic)

on:
  pull_request:
    types: [opened, edited, synchronize, ready_for_review, reopened]

permissions:
  contents: read
  pull-requests: write

env:
  # Un seul groupe capturant pour le num√©ro: (\d+)
  # Couvre:  #123  |  ABC-123  |  fix/close/resolve #123  |  ticket-123 / ticket 123 / ticket_123
  TICKET_REGEX: '(?:(?:\\B#|[A-Z][A-Z0-9_]+-|(?:close[sd]?|fix(?:es|ed)?|resolve(?:s|d)?)\\s+#|ticket[-_ ]?)(\\d+)\\b)'

jobs:
  link:
    runs-on: ubuntu-latest
    steps:
      - name: Detect & link issues in PR body
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            const ticketRe = new RegExp(process.env.TICKET_REGEX, 'ig'); // 'i' insensitive, 'g' global
            const strongVerbRe = /\b(fix(?:es|ed)?|close(?:s|d)?|resolve(?:s|d)?)\b/i;

            const branch = pr.head.ref || '';
            const title  = pr.title || '';
            let body     = pr.body || '';

            // Commits de la PR (pour rep√©rer d'√©ventuels num√©ros)
            const commits = await github.paginate(
              github.rest.pulls.listCommits,
              { owner, repo, pull_number: pr.number, per_page: 100 }
            );
            const commitMessages = commits.map(c => c.commit.message).join('\n');

            // Texte √† analyser
            const haystack = [branch, title, body, commitMessages].join('\n');

            // Extraction: le num√©ro est dans le groupe 1
            const found = new Set();
            for (const m of haystack.matchAll(ticketRe)) {
              const n = m[1] || (m[0].match(/\d+/) || [])[0];
              if (n && /^\d+$/.test(n)) found.add(Number(n));
            }

            if (found.size === 0) {
              core.setFailed(
                'Cette PR n‚Äôest li√©e √† aucun ticket/issue d√©tect√©.\n' +
                'Accepte l‚Äôun des crit√®res : Closes #123 | titre PROJ-123 | branche ticket-123.'
              );
              return;
            }

            const useFixes = strongVerbRe.test(haystack);

            // √âvite les doublons d√©j√† pr√©sents dans le body
            const already = new Set();
            const bodyLower = body.toLowerCase();
            for (const n of found) {
              if (bodyLower.includes(`#${n}`)) already.add(n);
            }

            const toAdd = [...found].filter(n => !already.has(n));
            if (toAdd.length === 0) {
              console.log('Tous les tickets d√©tect√©s sont d√©j√† r√©f√©renc√©s dans la PR.');
              return;
            }

            const prefix = useFixes ? 'Fixes' : 'Related to';
            const lines = toAdd.map(n => `${prefix} #${n}`).join('\n');
            const separator = body.trim().length ? '\n\n' : '';
            const newBody = `${body}${separator}<!-- auto-linked by workflow -->\n${lines}\n`;

            await github.rest.pulls.update({
              owner, repo,
              pull_number: pr.number,
              body: newBody
            });

            console.log(`Ajout√© dans la PR: ${lines}`);
