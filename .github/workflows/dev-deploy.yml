name: üöÄ Deploy DEV (IONOS SFTP)

on:
  pull_request:
    branches: [ develop ]
    types: [ closed ]
  push:
    branches: [ develop ]   # supprime ce bloc si tu veux d√©clencher uniquement apr√®s merge

concurrency:
  group: deploy-develop
  cancel-in-progress: true

jobs:
  deploy:
    if: >
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      # Charge la cl√© dans l‚Äôagent pour nos commandes ssh (mkdir, ls, etc.)
      - name: üîê Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: üîß Construire le chemin distant normalis√©
        id: build_path
        env:
          REMOTE_CHEMIN: ${{ secrets.REMOTE_CHEMIN }}
          ADRESSE_GLOBAL: ${{ vars.ADRESSE_GLOBAL }}
          ADRESSE_LOCAL: ${{ vars.ADRESSE_LOCAL }}
        run: |
          set -euo pipefail
          if [ -z "${REMOTE_CHEMIN:-}" ] || [ -z "${ADRESSE_GLOBAL:-}" ] || [ -z "${ADRESSE_LOCAL:-}" ]; then
            echo "::error title=Variables manquantes::REMOTE_CHEMIN (Secret), ADRESSE_GLOBAL et ADRESSE_LOCAL (Variables) sont requis."
            exit 1
          fi
          if [ "${REMOTE_CHEMIN}" = "/" ]; then
            echo "::error title=REMOTE_CHEMIN invalide::REMOTE_CHEMIN ne peut pas √™tre '/'."
            exit 1
          fi

          REMOTE_PATH="${REMOTE_CHEMIN%/}/${ADRESSE_GLOBAL%/}/dev/${ADRESSE_LOCAL#/}"
          # Nettoyage pour √©viter les doubles //
          REMOTE_PATH="$(printf '%s' "$REMOTE_PATH" | sed -E 's:/+:/:g')"

          echo "REMOTE_PATH=$REMOTE_PATH" >> "$GITHUB_OUTPUT"

      - name: üîå Tester la connexion SSH
        run: |
          ssh -o BatchMode=yes -o StrictHostKeyChecking=no \
            ${{ secrets.SFTP_USER }}@${{ secrets.SFTP_HOST }} \
            "echo 'SSH OK: ' \$(hostname)"

      - name: üìÅ S'assurer que le dossier existe
        run: |
          REMOTE_PATH="${{ steps.build_path.outputs.REMOTE_PATH }}"
          ssh -o BatchMode=yes -o StrictHostKeyChecking=no \
            ${{ secrets.SFTP_USER }}@${{ secrets.SFTP_HOST }} \
            "mkdir -p -- \"$REMOTE_PATH\" && echo '‚úÖ Dossier pr√™t: ' \"$REMOTE_PATH\""

      # ‚úÖ Normaliser la cl√© priv√©e pour l‚Äôaction SFTP (remplace \n litt√©raux par des retours ligne r√©els)
      #    IMPORTANT: pas de quotes autour de EOF
      - name: üîë Normaliser la cl√© priv√©e pour l‚Äôaction SFTP
        id: fixkey
        shell: bash
        run: |
          key='${{ secrets.SSH_PRIVATE_KEY }}'
          # Remplace les s√©quences \n par de vrais sauts de ligne
          key="${key//\\n/$'\n'}"
          {
            echo "ssh_key<<EOF"
            printf '%s\n' "$key"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: üöö Deploy via SFTP (incremental)
        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
        with:
          server: ${{ secrets.SFTP_HOST }}
          username: ${{ secrets.SFTP_USER }}
          ssh_private_key: ${{ steps.fixkey.outputs.ssh_key }}
          local_path: .
          remote_path: ${{ steps.build_path.outputs.REMOTE_PATH }}
          sftpArgs: "-rz --exclude='.git*' --exclude='.github/**' --exclude='node_modules/**' --exclude='.env*' --exclude='tests/**' --exclude='coverage/**'"

      - name: üëÄ Lister le dossier d√©ploy√© (debug)
        run: |
          ssh -o BatchMode=yes -o StrictHostKeyChecking=no \
            ${{ secrets.SFTP_USER }}@${{ secrets.SFTP_HOST }} \
            "ls -la '${{ steps.build_path.outputs.REMOTE_PATH }}' || true"
